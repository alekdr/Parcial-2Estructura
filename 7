import java.util.*;

public class Warshall_ComponentesFuertes {
    static boolean[][] warshall(boolean[][] r){
        int n=r.length;
        boolean[][] res=new boolean[n][n];
        for(int i=0;i<n;i++)res[i]=Arrays.copyOf(r[i],n);
        for(int k=0;k<n;k++)
            for(int i=0;i<n;i++)
                for(int j=0;j<n;j++)
                    res[i][j]=res[i][j]||(res[i][k]&&res[k][j]);
        return res;
    }

    public static void main(String[] args){
        boolean[][] g={
            {true,true,false,false},
            {false,true,true,false},
            {false,false,true,true},
            {true,false,false,true}
        };
        boolean[][] r=warshall(g);
        int n=r.length;
        boolean[] vis=new boolean[n];
        int comp=1;
        for(int i=0;i<n;i++){
            if(!vis[i]){
                List<Integer> cfc=new ArrayList<>();
                for(int j=0;j<n;j++)
                    if(r[i][j]&&r[j][i]){vis[j]=true;cfc.add(j);}
                System.out.println("CFC"+comp+++": "+cfc);
            }
        }
    }
}
